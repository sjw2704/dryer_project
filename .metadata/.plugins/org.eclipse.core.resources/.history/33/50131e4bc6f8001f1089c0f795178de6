#include "main.h"
#include "fnd_controller.h"

unsigned char LED_0F[29];

static SPI_HandleTypeDef *mhspi;
void Set_Up(SPI_HandleTypeDef *hspi2)
{
	mhspi = hspi2;

	LED_0F[0] = 0xC0; //0
	LED_0F[1] = 0xF9; //1
	LED_0F[2] = 0xA4; //2
	LED_0F[3] = 0xB0; //3
	LED_0F[4] = 0x99; //4
	LED_0F[5] = 0x92; //5
	LED_0F[6] = 0x82; //6
	LED_0F[7] = 0xF8; //7
	LED_0F[8] = 0x80; //8
	LED_0F[9] = 0x90; //9
	LED_0F[10] = 0x88; //A
	LED_0F[11] = 0x83; //b
	LED_0F[12] = 0xC6; //C
	LED_0F[13] = 0xA1; //d
	LED_0F[14] = 0x86; //E
	LED_0F[15] = 0x8E; //F
	LED_0F[16] = 0xC2; //G
	LED_0F[17] = 0x89; //H
	LED_0F[18] = 0xF9; //I
	LED_0F[19] = 0xF1; //J
	LED_0F[20] = 0xC3; //L
	LED_0F[21] = 0xA9; //n
	LED_0F[22] = 0xC0; //O
	LED_0F[23] = 0x8C; //P
	LED_0F[24] = 0x98; //q
	LED_0F[25] = 0x92; //S
	LED_0F[26] = 0xC1; //U
	LED_0F[27] = 0x91; //Y
	LED_0F[28] = 0xFE; //hight -
}


void send(unsigned char X)
{
  for (int i = 8; i >= 1; i--)
  {
    if (X & 0x80)
    {
      HAL_GPIO_WritePin(FND_DIO_GPIO_Port, FND_DIO_Pin, 1);
    }
    else
    {
    	HAL_GPIO_WritePin(FND_DIO_GPIO_Port, FND_DIO_Pin, 0);
    }
    X <<= 1;
    HAL_GPIO_WritePin(FND_SCLK_GPIO_Port, FND_SCLK_Pin, 0);
    HAL_GPIO_WritePin(FND_SCLK_GPIO_Port, FND_SCLK_Pin, 1); bvnc
  }
	//HAL_SPI_Transmit(mhspi, &X, 1, 100);
}

void send_port(unsigned char X, unsigned char port)
{
  send(X);
  send(port);
  HAL_GPIO_WritePin(FND_RCLK_GPIO_Port, FND_RCLK_Pin, 0);
  HAL_GPIO_WritePin(FND_RCLK_GPIO_Port, FND_RCLK_Pin, 1);
}

void digit_temper(int n, int replay, uint8_t showZero)
{
  int n1, n2, n3, n4;
  n1 = (int)  n % 10;
  n2 = (int) (n % 100)/10;
  n3 = (int) (n % 1000)/ 100;
  n4 = (int) (n % 10000)/ 1000;

 for(int i = 0; i<=replay; i++){
	send_port(LED_0F[n1], 0b0001);
    if(showZero | n>9)send_port((LED_0F[n2] & 0x7F), 0b0010);
    if(showZero | n>99)send_port(LED_0F[n3], 0b0100);
    if(showZero | n>999)send_port(LED_0F[n4], 0b1000);
 }
}

void digit4(int n, int replay, uint8_t showZero)
{
  int n1, n2, n3, n4;
  n1 = (int)  n % 10;
  n2 = (int) (n % 100)/10;
  n3 = (int) (n % 1000)/ 100;
  n4 = (int) (n % 10000)/ 1000;

 for(int i = 0; i<=replay; i++){
	send_port(LED_0F[n1], 0b0001);
    if(showZero | n>9)send_port(LED_0F[n2], 0b0010);
    if(showZero | n>99)send_port(LED_0F[n3], 0b0100);
    if(showZero | n>999)send_port(LED_0F[n4], 0b1000);
 }
}

void digit_temper_replay(int n, int replay)
{
	digit_temper(n,replay,0);
}

void digit4_zero(int n)
{
  digit4(n, 0, 0);
}

void digit4showZero_replay(int n, int replay)
{
	digit4(n, replay, 1);
}

void digit4showZero_zero(int n)
{
	digit4(n, 0, 1);
}

void digit2(int n, int port, int replay)
{
  int n1, n2;
  n1 = (int)  n % 10;
  n2 = (int) ((n % 100)-n1)/10;

   for(int i = 0; i<=replay; i++){
    send_port(LED_0F[n1], port);
    send_port(LED_0F[n2], port<<1);
   }
}

void digit2_port(int n, int port)
{
	digit2(n, port, 0);
}

